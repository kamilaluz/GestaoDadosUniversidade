@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav ms-auto">
    @if (SignInManager.IsSignedIn(User))
    {
        var usuario = await UserManager.GetUserAsync(User);
        if (usuario != null)
        {
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="userDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                    Olá, @usuario.UserName!
                </a>
                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userDropdown">
                    <li>
                        <a class="dropdown-item" asp-area="Identity" asp-controller="Account" asp-action="Manage">Gerenciar Conta</a>
                    </li>
                    <li>
                        <hr class="dropdown-divider">
                    </li>
                    <li>
                        <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" class="dropdown-item p-0 m-0">
                            <button type="submit" class="btn btn-link text-decoration-none text-dark w-100 text-start">Logout</button>
                        </form>
                    </li>
                </ul>
            </li>
        }
        else
        {
            <li class="nav-item">
                <span class="nav-link text-danger">Erro ao obter usuário.</span>
            </li>
        }
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-controller="Account" asp-action="Login">Login</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-controller="Account" asp-action="Register">Registrar</a>
        </li>
    }
</ul>
